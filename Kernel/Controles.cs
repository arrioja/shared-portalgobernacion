using System;
using System.IO;
using System.ComponentModel;
using System.Configuration;
using System.Collections;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Web.UI.HtmlControls;


namespace Portal.Kernel
{
	/// <summary>
	/// Define la clase base con las propiedades especificas del Portal
	/// para mostrar los modulos.
	/// </summary>
	public class ControlModuloPortal : UserControl
	{
		private Modulo			_configuracionModulo;

		[Browsable(false),DesignerSerializationVisibility(DesignerSerializationVisibility.Hidden)]
		public int ModuloId
		{
			get
			{
				return _configuracionModulo.ModuloId;
			}
		}

		[Browsable(false),DesignerSerializationVisibility(DesignerSerializationVisibility.Hidden)]
		public bool EsEditable
		{
			get
			{
				return SeguridadPortal.EstaEnGrupos(_configuracionModulo.GruposAutorizadosEdicion);
			}
		}

		[Browsable(false),DesignerSerializationVisibility(DesignerSerializationVisibility.Hidden)]
		public Modulo ConfiguracionModulo
		{
			get
			{
				return _configuracionModulo;
			}
			set
			{
				_configuracionModulo = value;
			}
		}

		[Browsable(false),DesignerSerializationVisibility(DesignerSerializationVisibility.Hidden)]
		public Hashtable Configuracion
		{
			get
			{
				return ModulosBD.ObtenerConfig(ModuloId);
			}
		}

	}

	public class ControlModuloCachePortal : Control 
	{

		// Private field variables
		private Modulo			_configuracionModulo;
		private string          _SalidaCache = "";

		// Public property accessors

		public Modulo ConfiguracionModulo
		{
			get
			{
				return _configuracionModulo;
			}
			set
			{
				_configuracionModulo = value;
			}
		}

		public int ModuloId
		{
			get
			{
				return _configuracionModulo.ModuloId;
			}
		}

		//*********************************************************************
		//
		// CacheKey Property
		//
		// The CacheKey property is used to calculate a "unique" cache key
		// entry to be used to store/retrieve the portal module's content
		// from the ASP.NET Cache.
		//
		//*********************************************************************

		public string CacheKey 
		{

			get 
			{
				return "Key:" + this.GetType().ToString() + this.ModuloId + SeguridadPortal.EstaEnGrupos(_configuracionModulo.GruposAutorizadosEdicion);
			}
		}

		//*********************************************************************
		//
		// CreateChildControls Method
		//
		// The CreateChildControls method is called when the ASP.NET Page Framework
		// determines that it is time to instantiate a server control.
		// 
		// The CachedPortalModuleControl control overrides this method and attempts
		// to resolve any previously cached output of the portal module from the 
		// ASP.NET cache.  
		//
		// If it doesn't find cached output from a previous request, then the
		// CachedPortalModuleControl will instantiate and add the portal module's
		// User Control instance into the page tree.
		//
		//*********************************************************************

		protected override void CreateChildControls() 
		{

			// Attempt to resolve previously cached content from the ASP.NET Cache

			if (_configuracionModulo.TiempoCache > 0) 
			{
				_SalidaCache = (string) Context.Cache[CacheKey];
			}

			// If no cached content is found, then instantiate and add the portal
			// module user control into the portal's page server control tree

			if (_SalidaCache == null) 
			{

				base.CreateChildControls();

				ControlModuloPortal modulo = (ControlModuloPortal) Page.LoadControl(_configuracionModulo.Ubicacion);
                
				modulo.ConfiguracionModulo = this.ConfiguracionModulo;
				
				this.Controls.Add(modulo);
			}
		}

		//*********************************************************************
		//
		// Render Method
		//
		// The Render method is called when the ASP.NET Page Framework
		// determines that it is time to render content into the page output stream.
		// 
		// The CachedPortalModuleControl control overrides this method and captures
		// the output generated by the portal module user control.  It then 
		// adds this content into the ASP.NET Cache for future requests.
		//
		//*********************************************************************

		protected override void Render(HtmlTextWriter output) 
		{

			// If no caching is specified, render the child tree and return 

			if (_configuracionModulo.TiempoCache == 0) 
			{
				base.Render(output);
				return;
			}

			// If no cached output was found from a previous request, render
			// child controls into a TextWriter, and then cache the results
			// in the ASP.NET Cache for future requests.

			if (_SalidaCache == null) 
			{

				TextWriter tempWriter = new StringWriter();
				base.Render(new HtmlTextWriter(tempWriter));
				_SalidaCache = tempWriter.ToString();

				Context.Cache.Insert(CacheKey, _SalidaCache, null, DateTime.Now.AddSeconds(_configuracionModulo.TiempoCache), TimeSpan.Zero);
			}

			// Output the user control's content

			output.Write(_SalidaCache);
		}
	}
}
